# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#

var_1: &cache_key v3-dependencies-{{ checksum "Gemfile.lock" }}

defaults: &defaults
  working_directory: /home/circleci/site-pagopa.gov.it
  docker:
    - image: circleci/ruby:2.6.4-node
      environment:
        BUNDLE_JOBS: 3
        BUNDLE_RETRY: 3
        BUNDLE_PATH: vendor/bundle
        BUNDLER_VERSION: 2.0.1
        JEKYLL_ENV: production

# we use a rw SSH key instead of the default one injected by CircleCI because we
# use it for deploy as well
anchor_2: &add_ssh_keys
  fingerprints:
    - "23:6b:c6:c6:90:b3:65:e6:84:01:b7:4e:c8:c1:e8:4d"

version: 2.1
orbs:
  aws-cli: circleci/aws-cli@2.0.3
jobs:
  build:
    <<: *defaults
    steps:
      - add_ssh_keys: *add_ssh_keys
      - checkout

      - run:
          name: Configure Bundler
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler

      # Download and cache dependencies
      - restore_cache:
          keys:
            - *cache_key
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: Install dependencies
          command: bundle install

      - save_cache:
          paths:
            - ./vendor/bundle
          key: *cache_key

      - run:
          name: Build jekyll website
          # including _config_production.yml to override baseurl path
          command: bundle exec jekyll build --config _config.yml

      - persist_to_workspace:
          root: /home/circleci
          paths:
            - site-pagopa.gov.it
            # the following setting is needed in order to avoid errors
            #  with known_hosts during the deploy job (git push)
            - .ssh

      - store_artifacts:
          path: /home/circleci/site-pagopa.gov.it/_site

  test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: Run htmlproofer
          command: bundle exec htmlproofer ./_site --check-html --only-4xx '/.*/'

  deploy:
    <<: *defaults
    executor: aws-cli/default
    steps:
      - attach_workspace:
          at: /home/circleci

      - add_ssh_keys: *add_ssh_keys

      # Deploy the site to AWS
      - aws-cli/install
      - run:
          name: "Deploy to S3 & refresh Cloudfront"
          command: |
            aws s3 sync _site "s3://$AWS_BUCKET_NAME" --delete && aws cloudfront create-invalidation --distribution-id "$AWS_CLOUDFRONT_ID" --paths '/*'

  deploypsp:
    <<: *defaults
    executor: aws-cli/default
    steps:
      - attach_workspace:
          at: /home/circleci

      - add_ssh_keys: *add_ssh_keys

      # Deploy the site to AWS
      - aws-cli/install
      - run:
          name: "Deploy to S3 & refresh Cloudfront specific URLs"
          command: |
            aws s3 sync _site "s3://$AWS_BUCKET_NAME" --delete && aws cloudfront create-invalidation --distribution-id "$AWS_CLOUDFRONT_ID" --paths '/it/prestatori-servizi-di-pagamento/*' '/assets/jsonpsp/*'


workflows:
  version: 2
  build-deploy:
    jobs:
      - build:
          filters:
            branches:
              ignore: gh-pages
      # TODO
      # - test:
      #     requires:
      #       - build
      #     filters:
      #       branches:
      #         only: master
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - master
  scheduled:
    triggers:
      - schedule:
          cron: "0 15 10 * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - build:
          filters:
            branches:
              ignore: gh-pages
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - master
  dailypsp:
    triggers:
      - schedule:
          cron: "0 12 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - build:
          filters:
            branches:
              ignore: gh-pages
      - deploypsp:
          requires:
            - build
          filters:
            branches:
              only:
                - master
                